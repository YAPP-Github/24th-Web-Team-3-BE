name: 어드민 서비스 빌드 후 도커허브에 올리기
on:
  push:
    branches: [ 'main' ]
    paths:
      - 'admin-service/**' # Admin Service 모듈 변경
      - '.github/workflows/admin-service.yaml' # Admin Service 워크플로우 변경

env:
  SPRING_PROFILE: prod
  IMAGE_NAME: spinachpasta/admin-service
  MODULE_PATH: admin-service
  SERVER_PORT: 8080
  GIT_ENVIRONMENT: prod (admin-service)

concurrency:
  group: admin-service

jobs:
  prepare-variables:
    name: 환경변수 준비하기
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.setup-env.outputs.image-tag }}
      module-path: ${{ steps.setup-env.outputs.module-path }}
      spring-profile: ${{ steps.setup-env.outputs.spring-profile }}
      server-port: ${{ steps.setup-env.outputs.server-port }}
      image-name: ${{ steps.setup-env.outputs.image-name }}
      git-environment: ${{ steps.setup-env.outputs.git-environment }}
    steps:
      - name: GitHub 에서 레포 받아오기
        uses: actions/checkout@v3

      - name: 환경변수 출력하기
        id: setup-env
        run: |
          echo "image-tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "module-path=$MODULE_PATH" >> $GITHUB_OUTPUT
          echo "spring-profile=$SPRING_PROFILE" >> $GITHUB_OUTPUT
          echo "server-port=$SERVER_PORT" >> $GITHUB_OUTPUT
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
          echo "git-environment=$GIT_ENVIRONMENT" >> $GITHUB_OUTPUT

  call-build-workflow:
    if: github.event_name == 'push'
    needs: [ prepare-variables ]
    name: 이미지 빌드 & 푸쉬
    uses: ./.github/workflows/jib-build.yaml
    permissions:
      id-token: write
      contents: read
    with:
      spring-profile: ${{ needs.prepare-variables.outputs.spring-profile }}
      server-port: ${{ needs.prepare-variables.outputs.server-port }}
      image-name: ${{ needs.prepare-variables.outputs.image-name }}
      image-tag: ${{ needs.prepare-variables.outputs.image-tag }}
      module-path: ${{ needs.prepare-variables.outputs.module-path }}
    secrets:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}


  call-deploy-workflow:
    needs: [ prepare-variables, call-build-workflow ]
    name: ArgoCD로 배포하기
    uses: ./.github/workflows/argocd-deploy.yaml
    permissions:
      contents: write
    with:
      argocd-repo-name: YAPP-Github/mafoo-argocd-manifest
      overlay-name: ${{ needs.prepare-variables.outputs.spring-profile }}
      service-name: ${{ needs.prepare-variables.outputs.module-path }}
      image-name: ${{ needs.prepare-variables.outputs.image-name }}
      image-tag: ${{ needs.prepare-variables.outputs.image-tag }}
      environment: ${{ needs.prepare-variables.outputs.git-environment }}
      default-image-name: spinachpasta/admin-service
    secrets:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
